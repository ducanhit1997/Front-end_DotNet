{"version":3,"sources":["components/Menu/images/bg_form_login.png","pages/HomePage/images/ok.jpg","pages/HomePage/images/pizza.jpg","constants/Config.js","utils/apiCall.js","components/Menu/login.js","components/Menu/register.js","components/Menu/Nav.js","components/Product/Product.js","redux/product/action.js","redux/product/actionTypes.js","container/ProductContainer.js","redux/cart/action.js","redux/cart/actionTypes.js","components/ListProduct/ListProduct.js","pages/HomePage/HomePage.js","pages/Admin/TableData/formAddCustomer.js","redux/customer/action.js","redux/customer/actionType.js","pages/Admin/TableData/TableData.js","pages/Admin/TableData/ListProduct.js","redux/category/action.js","redux/category/actionTypes.js","pages/Admin/TableData/formAddCatelogy.js","pages/Admin/TableData/ListCategory.js","pages/Admin/Admin.js","pages/NotFoundPage/NotFoundPage.js","components/Cart/FormCart.js","components/Cart/Cart.js","App.js","serviceWorker.js","redux/product/product.js","redux/customer/customer.js","redux/customer/itemCustomer.js","redux/cart/cart.js","redux/category/category.js","redux/category/itemCatelogy.js","redux/index.js","index.js"],"names":["module","exports","__webpack_require__","p","API_URL","callApi","endpoint","method","arguments","length","undefined","body","header","axios","url","concat","Config","data","headers","catch","err","console","log","LoginForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","values","onSubmitLogin","username","password","loading","this","getFieldDecorator","react_default","a","createElement","row","col","md","className","style","display","justifyContent","es_form","onSubmit","Item","rules","required","message","input","prefix","icon","type","color","placeholder","es_button","htmlType","onClick","showFormRegister","Component","WrappedNormalLoginForm","Form","create","name","RegisterForm","onSubmitRegister","firstname","lastname","email","compareToFirstPassword","rule","value","callback","getFieldValue","checkMailExist","apiCall","then","res","validator","showFormLogin","WrappedNormalRegisterForm","SubMenu","Menu","Nav","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Login","setState","acc","id","user_id","token","firstName","lastName","role","localStorage","setItem","isLogin","state","notification","success","roleAdmin","Register","res2","isRegister","onChange","defineProperty","target","handleClick","current","key","clear","showProfile","handleOk","handleCancel","onCloseProfile","username_register","password_register","repassword_register","firstname_register","lastname_register","firstName_update","getItem","count","menu","mode","react_router_dom","to","listStyle","title","pathname","badge","modal","centered","top","visible","onOk","onCancel","width","height","footer","register","login","Meta","Card","Product","addProductToCard","item","quanlity","formatNumber","num","toString","replace","addToCart","product","error","products","allCategory","traditional","mixed","seafood","idCategory","_this2","map","borderColor","marginTop","card","hoverable","cover","alt","src","image","margin","description","textAlign","act_LoadProduct_Request","dispatch","act_LoadProduct","act_LoadProductByCategory","act_LoadPage","ProductContainer","selectPage","page","loadPage","selectOption","loadProductByCategory","_this$props","paddingTop","class","es_radio","Group","defaultValue","buttonStyle","Button","components_Product_Product","float","pagination","total","connect","cart","loadProduct","act_LoadProductByCategory_Request","act_addToCart","act_LoadPage_Request","ListProduct","container_ProductContainer","HomePage","data-ride","data-target","data-slide-to","backgroundImage","image1","backgroundSize","backgroundPosition","backgroundRepeat","image2","href","data-slide","components_ListProduct_ListProduct","dist_default","pageId","formAddCustomer","checkUsernameExist","fontWeight","marginLeft","act_LoadCustomer","act_FindCustomer","TableData","openFormUpdate","openFormAddUser","isUpdate","customers","showFormAddUser","onClose","err_firstname_update","err_lastname_update","err_email_update","err_username","err_firstname","err_lastname","err_password","err_repassword","err_email","push","showFormEdit","text","findCustomer","closeForm","loadCustomer","nextProps","itemCustomer","id_update","username_update","firstname_update","lastname_update","email_update","customer","index","drawer","placement","closable","TableData_formAddCustomer","htmlFor","readOnly","idCustomer","act_FindCustomer_Request","showNameCategory","nameCategory","load","pizzaCategory","act_LoadCategory","act_LoadCategoryById","formAddCatelogy","addCategory","FormItem_default","ListCategory","showFormAddCatelogy","openFormAddCatelogy","Authorization","categorys","findCatelogy","showModal","update","_this$state","name_update","forEach","v","i","showFormDelete","id_delete","splice","itemCatelogy","category","TableData_formAddCatelogy","act_LoadCategoryById_Request","Header","Layout","Sider","Content","Admin","collapsed","showCustomer","showProduct","showCategory","toggle","layout","trigger","collapsible","defaultSelectedKeys","background","padding","breadcrumb","minHeight","Admin_TableData_TableData","TableData_ListCategory","TableData_ListProduct","NotFoundPage","data-dismiss","aria-hidden","Option","Select","TextArea","Input","names","sum","FormCart","address","handleChange","datHang","arr","sl","listId","join","productid","removeItem","window","location","reload","label","rows","es_select","JSON","parse","Cart","dataAfterUpdate","val","objetTmp","objectSpread","money","parseInt","stringify","showMessDelete","ind","backgroundColor","scope","input_number","min","max","event","stopPropagation","Cart_FormCart","initialState","App","ROLE","Menu_Nav","react_router","path","exact","render","pages_HomePage_HomePage","assign","components_Cart_Cart","component","Boolean","hostname","match","list_Product","PRODUCT","action","list_CUSTOMER","CUSTOMER","CART","toConsumableArray","list_CATEGORY","CATEGORY","CATELOGY","appReducers","combineReducers","store","createStore","myReducer","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81e46b61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg_form_login.59a878c2.png\";","module.exports = __webpack_public_path__ + \"static/media/ok.facad964.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizza.beaa036d.jpg\";","export const API_URL = 'https://dotnetcuoiki.azurewebsites.net/api';\r\n//export const API_URL = 'http://192.168.1.41:50191/api';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport * as Config  from './../constants/Config';\r\n\r\n\r\nexport default function callApi(endpoint, method = 'GET', body, header ){\r\n    return axios({\r\n        method: method,\r\n        url: `${Config.API_URL}/${endpoint}`,\r\n        data: body, \r\n        headers: header\r\n     }).catch(err =>{\r\n         console.log(err);\r\n     });\r\n}","import React, { Component } from 'react'\r\nimport \"./login.style.css\"\r\nimport bg_form_login from './images/bg_form_login.png'\r\nimport { Row, Col, Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nclass LoginForm extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                this.props.onSubmitLogin(values.username, values.password)\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { loading } = this.props\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Row>\r\n                <Col md={6}> </Col>\r\n                <Col md={12} className=\"form_login--wrapper\">\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                    }}>\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item>\r\n                                <div className=\"title-login\">\r\n                                    Đăng nhập hệ thống\r\n                                </div>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {\r\n                                    (loading != '') &&\r\n                                    <div className=\"block_error\">\r\n                                        <div className=\"error_message\">{loading}</div>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('username', {\r\n                                    rules: [{ required: true, message: 'Please input your username!' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Username\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{ required: true, message: 'Please input your Password!' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                    Đăng nhập\r\n                                    </Button>\r\n                                <a onClick={this.props.showFormRegister}>\r\n                                    Đăng ký tài khoản mới!\r\n                                    </a>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n                <Col md={6}> </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(LoginForm);\r\nexport default WrappedNormalLoginForm","import React, { Component } from 'react'\r\nimport \"./login.style.css\"\r\nimport apiCall from '../../utils/apiCall';\r\nimport bg_form_login from './images/bg_form_login.png'\r\nimport { Row, Col, Form, Icon, Input, Button } from 'antd';\r\n\r\nclass RegisterForm extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(values);\r\n                this.props.onSubmitRegister(values.username, values.password, values.firstname, values.lastname, values.email)\r\n            }\r\n        });\r\n    };\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Mật khẩu không trùng nhau!');\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n    checkMailExist = (rule, value, callback) => {\r\n        //alert(value)\r\n        const form = this.props.form;\r\n        apiCall('users/checkemail', 'POST', {\r\n            email: value\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            if (value && res.data === 'Email already') {\r\n                callback('Email đã được đăng ký!');\r\n            } else {\r\n                callback();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { loading } = this.props\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n           \r\n            <Row>\r\n                <Col md={6}> </Col>\r\n                <Col md={12} className=\"form_login--wrapper\">\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                    }}>\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item>\r\n                                <div className=\"title-login\">\r\n                                    Đăng ký tài khoản\r\n                                </div>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('username', {\r\n                                    rules: [{ required: true, message: 'Vui lòng nhập username!' }\r\n                                    ],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Username\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{ required: true, message: 'Vui lòng nhập mật khẩu!' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Nhập mật khẩu\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('confirm', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true, message: 'Vui lòng nhập mật khẩu!'\r\n                                        },\r\n                                        {\r\n                                            validator: this.compareToFirstPassword,\r\n                                        }\r\n                                    ],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Nhập lại mật khẩu\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('email', {\r\n                                    rules: [\r\n                                        { required: true, message: 'Vui lòng nhập email!' },\r\n                                        { validator: this.checkMailExist },\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: 'E-mail không đúng định dạng!',\r\n                                        },\r\n\r\n                                    ],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('firstname', {\r\n                                    rules: [{ required: true, message: 'Vui lòng nhập firstname!' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Firstname\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('lastname', {\r\n                                    rules: [{ required: true, message: 'Vui lòng nhập lastname!' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Lastname\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                    Đăng ký\r\n                                    </Button>\r\n                                <a onClick={this.props.showFormLogin}>\r\n                                    Đã có tài khoản? Đăng nhập ngay\r\n                                    </a>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col md={6}> </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedNormalRegisterForm = Form.create({ name: 'normal_login' })(RegisterForm);\r\nexport default WrappedNormalRegisterForm","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport apiCall from '../../utils/apiCall';\r\nimport { Menu, notification, Icon, Badge, Modal, Button } from 'antd';\r\nimport LoginForm from './login'\r\nimport RegisterForm from './register'\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass Nav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogin: false,\r\n            loading: '',\r\n            showFormLogin: false,\r\n            showFormRegister: false,\r\n            username_register: '',\r\n            password_register: '',\r\n            repassword_register: '',\r\n            firstname_register: '',\r\n            lastname_register: '',\r\n            email: '',\r\n            firstName_update: '',\r\n            roleAdmin: false,\r\n            isRegister: false\r\n\r\n        };\r\n    }\r\n    Login = (username, password) => {\r\n        // e.preventDefault();\r\n        //Ưconsole.log(this.state);\r\n        this.setState({ loading: 'Vui lòng đợi....' });\r\n        // var { username, password } = this.state;\r\n        apiCall('login', 'POST', {\r\n            username: username,\r\n            password: password\r\n        }).then(res => {\r\n            const acc = res.data;\r\n            console.log(acc)\r\n            //this.setState({profile: acc});\r\n            const id = acc.user_id;\r\n            const token = acc.token;\r\n            const firstName = acc.firstName;\r\n            const lastName = acc.lastName;\r\n            const email = acc.email;\r\n            const role = acc.role;\r\n            //\r\n            //console.log(role);\r\n\r\n            const name = lastName + \" \" + firstName;\r\n            localStorage.setItem(\"id\",id);\r\n            localStorage.setItem(\"name\", name);\r\n            localStorage.setItem(\"firstName\", firstName);\r\n            localStorage.setItem(\"lastName\", lastName);\r\n            localStorage.setItem(\"email\", email);\r\n            localStorage.setItem(\"token\", token);\r\n            localStorage.setItem(\"role\", role)\r\n\r\n            this.setState({ isLogin: true })\r\n            //this.setState({username: '',password:'', loading:''});\r\n\r\n            localStorage.setItem(\"ACCESSTOKEN\", true);\r\n            if (this.state.isLogin) {\r\n                notification.success({\r\n                    message: 'Bạn đã đăng nhập thành công'\r\n                });\r\n                if (role === 'admin') {\r\n                    this.setState({ roleAdmin: true })\r\n                    if (this.state.roleAdmin === true) {\r\n                        const roleAdmin = true;\r\n                        localStorage.setItem(\"roleAdmin\", roleAdmin);\r\n                    }\r\n                }\r\n                this.setState({ showFormLogin: false })\r\n            }\r\n        }).catch(e => {\r\n            this.setState({ loading: 'Sai thông tin đăng nhập!!' });\r\n        })\r\n    }\r\n    Register = (username, password, firstname, lastname, email) => {\r\n        apiCall('users/register', 'POST', {\r\n            username: username,\r\n            password: password,\r\n            firstName: firstname,\r\n            lastName: lastname,\r\n            email: email\r\n        }).then(res2 => {\r\n            console.log(res2);\r\n            this.setState({ isRegister: true });\r\n            if (this.state.isRegister) {\r\n                notification.success({\r\n                    message: 'Bạn đã đăng ký thành công'\r\n                });\r\n\r\n                this.setState({ showFormRegister: false })\r\n            }\r\n        })\r\n    }\r\n    showFormRegister = () => {\r\n        console.log('registeer')\r\n        this.setState({\r\n            showFormRegister: !this.state.showFormRegister,\r\n            // showFormLogin: false\r\n        })\r\n    }\r\n  \r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleClick = (e) => {\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n        if (e.key === 'login') {\r\n            this.setState({\r\n                showFormLogin: true,\r\n            });\r\n        }\r\n        if (e.key === 'logout') {\r\n            this.setState({ user_id: '', roleAdmin: false, data: [] });\r\n            localStorage.clear();\r\n            notification.success({\r\n                message: 'Bạn đã đăng xuất thành công'\r\n            });\r\n            \r\n        }\r\n        if (e.key === 'profile') {\r\n            this.setState({\r\n                showProfile: true,\r\n            });\r\n        }\r\n    }\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            showFormLogin: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            showFormLogin: false,\r\n        });\r\n    };\r\n    onCloseProfile = () => {\r\n        this.setState({\r\n            showProfile: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const isLogin = localStorage.getItem(\"ACCESSTOKEN\");\r\n        const name = localStorage.getItem(\"name\");\r\n        const firstName = localStorage.getItem(\"firstName\");\r\n        const lastName = localStorage.getItem(\"lastName\");\r\n        const email = localStorage.getItem(\"email\");\r\n        const roleAdmin = localStorage.getItem(\"roleAdmin\");\r\n        //console.log(firstName);\r\n        //console.log(\"dta amenu\", this.props.data)\r\n        var { data } = this.props;\r\n        const count = data.length\r\n        console.log(count);\r\n        return (\r\n            <div className=\"as\">\r\n                <Menu\r\n                    onClick={this.handleClick}\r\n                    mode=\"horizontal\"\r\n                >\r\n                    <Menu.Item key=\"mail\">\r\n                        <Link to=\"/\">Trang chủ</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"app\">\r\n                        <Link to=\"/about\">Giới thiệu</Link>\r\n                    </Menu.Item>\r\n                    {\r\n                        (roleAdmin) ?\r\n                            <Menu.Item key=\"admin\">\r\n                                <Link to=\"/admin\">Truy cập trang admin</Link>\r\n                            </Menu.Item> :\r\n                            <Menu.Item key=\"admsin\" style={{ listStyle: 'none' }}>\r\n                            </Menu.Item>\r\n                    }\r\n                    {\r\n                        (isLogin) ?\r\n                            <SubMenu title={<span className=\"submenu-title-wrapper\" style={{ color: 'red' }}> Xin chào:  {(name)}<Icon type=\"caret-down\" /></span>}>\r\n                            <Menu.Item title=\"Item 1\" key=\"logout\">\r\n                                    Đăng xuất\r\n                                </Menu.Item>\r\n                            </SubMenu> :\r\n                            <Menu.Item key=\"login\">\r\n                                <Button>Đăng nhập</Button>\r\n                            </Menu.Item>\r\n                    }\r\n                    <Menu.Item key=\"appcart\">\r\n                        {/* <Link to=\"/cart\" >Gio hang ({this.props.data.length})</Link> */}\r\n                        {\r\n                            (isLogin) ?\r\n                                <Link to={{\r\n                                    pathname: '/cart',\r\n                                    state: {\r\n                                        data: this.props.data,\r\n                                    }\r\n                                }}>Giỏ hàng  <Badge count={this.props.data.length}>\r\n                                        <Icon type=\"shopping-cart\" />\r\n                                    </Badge></Link>\r\n                                :\r\n                                <Link style={{}}></Link>\r\n                        }\r\n                    </Menu.Item>\r\n\r\n                </Menu>\r\n                <Modal\r\n                    // title=\"LOGIN\"\r\n                    centered={true}\r\n                    style={{ top: 60 }}\r\n                    // visible={true}\r\n                    visible={this.state.showFormLogin}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    width={'50%'}\r\n                    height={'100%'}\r\n                    footer={null}\r\n                >\r\n                    {this.state.showFormRegister ?\r\n                        <RegisterForm onSubmitRegister={this.Register} showFormLogin={this.showFormRegister} /> :\r\n                        <LoginForm loading={this.state.loading} onSubmitLogin={this.Login} showFormRegister={this.showFormRegister} />\r\n                    }\r\n\r\n                </Modal>\r\n                {/* <Drawer\r\n                    title=\"Đăng ký\"\r\n                    placement=\"right\"\r\n                    closable={true}\r\n                    onClose={this.onCloseFormRegister}\r\n                    visible={this.state.showFormRegister}\r\n                    width={350}\r\n                >\r\n                    <form className=\"form-horizontal\" onSubmit={this.Register}>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Tên đăng nhập:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" name=\"username_register\" value={this.state.username_register} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                                <div style={{ color: 'red' }}>{this.state.err_username}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"pwd\">Mật khẩu:</label>\r\n                            <div>\r\n                                <input type=\"password\" className=\"form-control\" id=\"pwd\" name=\"password_register\" value={this.state.password_register} onChange={this.onChange} placeholder=\"Enter password\" />\r\n                                <div style={{ color: 'red' }}>{this.state.err_password}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"pwd\">Nhập lại mật khẩu:</label>\r\n                            <div>\r\n                                <input type=\"password\" className=\"form-control\" id=\"pwd\" name=\"repassword_register\" value={this.state.repassword_register} onChange={this.onChange} placeholder=\"Enter password\" />\r\n                                <div style={{ color: 'red' }}>{this.state.err_repassword}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Firstname:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" name=\"firstname_register\" value={this.state.firstname_register} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                                <div style={{ color: 'red' }}>{this.state.err_firstname}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Lastname:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" name=\"lastname_register\" value={this.state.lastname_register} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                                <div style={{ color: 'red' }}>{this.state.err_lastname}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Email:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                                <div style={{ color: 'red' }}>{this.state.err_email}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group1\">\r\n                            <div className=\"\">\r\n                                <button type=\"submit\" loading={this.state.iconLoading} className=\"btn btn-default\" >Submit</button>\r\n                            </div>\r\n                        </div>\r\n                        <p style={{ color: 'red' }}>{this.state.loading}</p>\r\n                    </form>\r\n                </Drawer> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\n//import { connect } from 'react-redux';\r\nimport { Card, Button, notification, Popover } from 'antd';\r\n\r\nimport './style.css';\r\nconst { Meta } = Card;\r\n\r\n\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            products: [],\r\n            allCategory: true,\r\n            traditional: false,\r\n            mixed: false,\r\n            seafood: false,\r\n            idCategory: '',\r\n        }\r\n    }\r\n    addProductToCard = (item, quanlity) => {\r\n        this.props.addProductToCard(item, quanlity)\r\n    }\r\n    formatNumber = (num) => {\r\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n    }\r\n    render() {\r\n        const isLogin = localStorage.getItem(\"ACCESSTOKEN\");\r\n        console.log(isLogin);\r\n        var { data } = this.props;\r\n        //console.log(data);\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {this.props.products.map(product =>\r\n                        <div>\r\n                            <div className=\"col-sm-6 col-md-3 col-xs-12\" style={{ borderColor: '1px solid red', marginTop: '7px' }}>\r\n                                    <Card\r\n                                        hoverable\r\n                                        style={{ width: 278 }}\r\n                                        cover={<img alt=\"example\" src={product.image} style={{ width: '200px', height: '136px', margin: '10px 18px 0px 35px' }} />}\r\n                                    >\r\n                                        <Meta title={product.name} description={this.formatNumber(product.description) + \" VNĐ\"} />\r\n\r\n                                        <div style={{ textAlign: 'center', marginTop: '10px' }}><Button type=\"primary\" onClick={() => this.addToCart(product)}>Thêm vào giỏ hàng</Button></div>\r\n                                    </Card>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    addToCart = (product) => {\r\n        //this.props.addToCart(product,1)\r\n        const isLogin = localStorage.getItem(\"ACCESSTOKEN\");\r\n        //console.log(isLogin);\r\n        if (isLogin) {\r\n            this.props.addProductToCard(product, 1)\r\n            notification.success({\r\n                message: 'Thêm vào giỏ hàng thành công'\r\n            })\r\n        }\r\n        if (isLogin === null) {\r\n            notification.error({\r\n                message: 'Vui lòng đăng nhập hệ thống'\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\nexport default Product;    ","import * as Types from './actionTypes';\r\nimport apiCall from './../../utils/apiCall';\r\n\r\nexport const act_LoadProduct_Request = () =>{\r\n    return(dispatch) =>{\r\n        return apiCall('products','GET',null).then(res =>{\r\n           // console.log(res.data);\r\n            dispatch(act_LoadProduct(res.data));\r\n        })\r\n    }\r\n}\r\nexport const act_LoadProduct = (data) =>{\r\n    return{\r\n        type: Types.LOAD_PRODUCT,\r\n        data\r\n    }\r\n}\r\n\r\nexport const act_LoadProductByCategory_Request = (idCategory) =>{\r\n    return(dispatch) =>{\r\n        // return apiCall('products/catalogy/1','GET',null).then(res =>{\r\n        //     console.log(res.data);\r\n        //     dispatch(act_LoadProductById(res.data));\r\n        // })\r\n        return apiCall(`products/catalogy/${idCategory}`,'GET',null).then(res =>{\r\n            //console.log(res.data);\r\n            dispatch(act_LoadProductByCategory(res.data));\r\n        })\r\n    }\r\n}\r\nexport const act_LoadProductByCategory = (data) =>{\r\n    return{\r\n        type: Types.LOAD_PRODUCT_BYID,\r\n        data\r\n    }\r\n}\r\n\r\nexport const act_LoadPage_Request = (page) =>{\r\n    return(dispatch) =>{\r\n        return apiCall(`products/page/${page}`,'GET',null).then(res =>{\r\n            //console.log(res.data);\r\n            dispatch(act_LoadPage(res.data));\r\n        })\r\n    }\r\n}\r\nexport const act_LoadPage = (data) =>{\r\n    return{\r\n        type: Types.LOAD_PAGE,\r\n        data\r\n    }\r\n}","export const LOAD_PRODUCT = 'LOAD_PRODUCT';\r\nexport const EDIT_PRODUCT= 'EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT= 'UPDATE_PRODUCT';\r\nexport const DELETE_PRODUCT= 'DELETE_PRODUCT';\r\nexport const LOAD_PRODUCT_BYID= 'LOAD_PRODUCT_BYID';\r\nexport const LOAD_PAGE= 'LOAD_PAGE';\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Radio,Pagination } from 'antd';\r\nimport Product from './../components/Product/Product';\r\nimport { act_LoadProduct_Request, act_LoadProductByCategory_Request, act_LoadPage_Request } from '../redux/product/action';\r\nimport { act_addToCart } from '../redux/cart/action';\r\n\r\nclass ProductContainer extends Component {\r\n    state = {\r\n        current: 1,\r\n    };\r\n    selectPage = page => {\r\n        //alert(page);\r\n        this.setState({\r\n            current: page,\r\n        });\r\n        this.props.loadPage(page)\r\n    };\r\n    selectOption = (e) => {\r\n        if (e.target.value === 'all') {\r\n            this.props.loadPage(1)\r\n        }\r\n        if (e.target.value === 'mixed') {\r\n            this.props.loadProductByCategory(2);\r\n        }\r\n        if (e.target.value === 'seafood') {\r\n            this.props.loadProductByCategory(1);\r\n        }\r\n        if (e.target.value === 'traditional') {\r\n            this.props.loadProductByCategory(3);\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.props.loadPage(1);\r\n    }\r\n    addProductToCard = (item, quanlity) => {\r\n        this.props.addProductToCard(item, quanlity)\r\n    }\r\n    render() {\r\n        var { products, data, addToCart } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"category-product\" style={{ paddingTop: '15px' }}>\r\n                    <div class=\"btn-group\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                        <Radio.Group defaultValue=\"all\" buttonStyle=\"solid\" onChange={this.selectOption}>\r\n                            <Radio.Button value=\"all\">Tất cả</Radio.Button>\r\n                            <Radio.Button value=\"traditional\">Truyền thống</Radio.Button>\r\n                            <Radio.Button value=\"mixed\">Thập cẩm</Radio.Button>\r\n                            <Radio.Button value=\"seafood\">Hải sản</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                </div>\r\n                <Product addProductToCard={this.addProductToCard} data={data} addToCart={addToCart} products={products}></Product>\r\n                <div style={{ float: 'right' }}>\r\n                    <Pagination current={this.state.current} onChange={this.selectPage} total={50}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.cart);\r\n    return {\r\n        products: state.product,\r\n        cart: state.cart\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        loadProduct: () => {\r\n            dispatch(act_LoadProduct_Request())\r\n        },\r\n        loadProductByCategory: (idCategory) => {\r\n            dispatch(act_LoadProductByCategory_Request(idCategory))\r\n        },\r\n        addToCart: (product) => {\r\n            dispatch(act_addToCart(product, 1))\r\n        },\r\n        loadPage: (page) =>{\r\n            dispatch(act_LoadPage_Request(page))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);    ","import * as Types from './actionTypes';\r\n// export const act_addToCart_Request = (idProduct) =>{\r\n//     return(dispatch) =>{\r\n//         return apiCall(`products/get/${idProduct}`,'GET',null).then(res =>{\r\n//             console.log(res.data);\r\n//             dispatch(act_addToCart(res.data));\r\n//         })\r\n//     }\r\n// }\r\nexport const act_addToCart = (product, quanlity) =>{\r\n    return{\r\n        type: Types.ADD_TO_CART,\r\n        product,\r\n        quanlity\r\n    }\r\n}","export const ADD_TO_CART = 'ADD_TO_CART';","import React, { Component } from 'react';\r\nimport ProductContainer from '../../container/ProductContainer';\r\nclass ListProduct extends Component {\r\n    addProductToCard=(item, quanlity)=>{\r\n        this.props.addProductToCard(item, quanlity)\r\n    }\r\n   \r\n    render() {\r\n        var {data} = this.props;\r\n        return (\r\n            <div>\r\n                <ProductContainer  data={data} addProductToCard={this.addProductToCard}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ListProduct;","import React, { Component } from 'react';\r\nimport image1 from './images/ok.jpg'\r\nimport image2 from './images/pizza.jpg'\r\nimport ListProduct from './../../components/ListProduct/ListProduct';\r\nimport CustomerChat from 'react-customer-chat'\r\n\r\n// import { FacebookProvider, SendToMessenger } from 'react-facebook';\r\n\r\nclass HomePage extends Component {\r\n    addProductToCard = (item, quanlity) => {\r\n        this.props.addProductToCard(item, quanlity)\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"data props\", this.props.data)\r\n        var { data } = this.props;\r\n        //console.log(data)\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"myCarousel\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                    {/* Indicators */}\r\n                    <ol className=\"carousel-indicators\">\r\n                        <li data-target=\"#myCarousel\" data-slide-to={0} className=\"active\" />\r\n                        <li data-target=\"#myCarousel\" data-slide-to={1} />\r\n                        <li data-target=\"#myCarousel\" data-slide-to={2} />\r\n                    </ol>\r\n                    {/* Wrapper for slides */}\r\n                    <div className=\"carousel-inner\">\r\n                        <div className=\"item active\">\r\n                            <div style={{\r\n                                backgroundImage: `url(${image1})`,\r\n                                backgroundSize: 'cover',\r\n                                backgroundPosition: '20%',\r\n                                backgroundRepeat: 'no-repeat',\r\n                                height: '500px'\r\n                            }}>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <div style={{\r\n                                backgroundImage: `url(${image2})`,\r\n                                backgroundSize: 'cover',\r\n                                backgroundPosition: '20%',\r\n                                backgroundRepeat: 'no-repeat',\r\n                                height: '500px'\r\n                            }}>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"item\">\r\n                            <img src={Slider2} alt=\"Chicago\" style={{ width: '100%', height: '350px' }} />\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <img src={Slider3} alt=\"New york\" style={{ width: '100%', height: '350px' }} />\r\n                        </div> */}\r\n                    </div>\r\n                    {/* Left and right controls */}\r\n                    <a className=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">\r\n                        <span className=\"glyphicon glyphicon-chevron-left\" />\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">\r\n                        <span className=\"glyphicon glyphicon-chevron-right\" />\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>\r\n                <ListProduct data={data} addProductToCard={this.addProductToCard} />\r\n                <CustomerChat\r\n                    pageId={1992738150809030}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport apiCall from '../../../utils/apiCall';\r\nimport { Form, Icon, Input, Button } from 'antd';\r\n\r\nclass formAddCustomer extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(values);\r\n                this.props.Register(values)\r\n            }\r\n        });\r\n    };\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Mật khẩu không trùng nhau!');\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n    checkMailExist = (rule, value, callback) => {\r\n        //alert(value)\r\n        const form = this.props.form;\r\n        apiCall('users/checkemail', 'POST', {\r\n            email: value\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            if (value && res.data === 'Email already') {\r\n                callback('Email đã được đăng ký!');\r\n            } else {\r\n                callback();\r\n            }\r\n        })\r\n    }\r\n    checkUsernameExist = (rule, value, callback) => {\r\n        //alert(value)\r\n        const form = this.props.form;\r\n        apiCall('users/check-username', 'POST', {\r\n            username: value\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            if (value && res.data === 'Username already') {\r\n                callback('Username đã tồn tại trong hệ thôngs');\r\n            } else {\r\n                callback();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { loading } = this.props\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [\r\n                                { required: true, message: 'Vui lòng nhập username!' },\r\n                                { validator: this.checkUsernameExist }\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: 'Vui lòng nhập mật khẩu!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Nhập mật khẩu\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('confirm', {\r\n                            rules: [\r\n                                {\r\n                                    required: true, message: 'Vui lòng nhập mật khẩu!'\r\n                                },\r\n                                {\r\n                                    validator: this.compareToFirstPassword,\r\n                                }\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Nhập lại mật khẩu\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('email', {\r\n                            rules: [\r\n                                { required: true, message: 'Vui lòng nhập email!' },\r\n                                { validator: this.checkMailExist },\r\n                                {\r\n                                    type: 'email',\r\n                                    message: 'E-mail không đúng định dạng!',\r\n                                },\r\n\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('firstName', {\r\n                            rules: [{ required: true, message: 'Vui lòng nhập firstname!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Firstname\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('lastName', {\r\n                            rules: [{ required: true, message: 'Vui lòng nhập lastname!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Lastname\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Thêm khách hàng\r\n                                    </Button>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <p style={{ color: 'red', fontWeight: 'bold', marginLeft: '10px' }}>{loading}</p>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst WrappedNormalRegisterForm = Form.create({ name: 'normal_login' })(formAddCustomer);\r\nexport default WrappedNormalRegisterForm\r\n","import * as Types from './actionType';\r\nimport apiCall from './../../utils/apiCall';\r\n\r\nexport const act_LoadCustomer_Request = () =>{\r\n    return(dispatch) =>{\r\n        return apiCall('users/all','GET',null).then(res =>{\r\n            //console.log(res.data);\r\n            dispatch(act_LoadCustomer(res.data));\r\n        })\r\n    }\r\n}\r\nexport const act_LoadCustomer = (data) =>{\r\n    return{\r\n        type: Types.LOAD_CUSTOMER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const act_FindCustomer_Request = (idCustomer) =>{\r\n    return(dispatch) =>{\r\n        return apiCall(`users/get/${idCustomer}`,'GET',null).then(res =>{\r\n            console.log(res.data);\r\n            dispatch(act_FindCustomer(res.data));\r\n        })\r\n    }\r\n}\r\nexport const act_FindCustomer = (data) =>{\r\n    return{\r\n        type: Types.FIND_CUSTOMER,\r\n        data\r\n    }\r\n}\r\n","export const LOAD_CUSTOMER = 'LOAD_CUSTOMER';\r\nexport const EDIT_CUSTOMER= 'EDIT_CUSTOMER';\r\nexport const UPDATE_CUSTOMER= 'UPDATE_CUSTOMER';\r\nexport const DELETE_CUSTOMER= 'DELETE_CUSTOMER';\r\nexport const FIND_CUSTOMER= 'FIND_CUSTOMER';\r\n","import React, { Component } from 'react';\r\nimport { Icon, Drawer, Button, message } from 'antd';\r\nimport apiCall from '../../../utils/apiCall';\r\nimport FormAddCustomer from './formAddCustomer';\r\nimport { connect } from 'react-redux';\r\nimport { act_LoadCustomer_Request, act_FindCustomer_Request } from '../../../redux/customer/action';\r\n\r\n\r\nclass TableData extends Component {\r\n    state = {\r\n        openFormUpdate: false,\r\n        openFormAddUser: false,\r\n        isUpdate: false,\r\n        customers: [],\r\n        loading: ''\r\n    };\r\n\r\n    showFormAddUser = () => {\r\n        this.setState({\r\n            openFormAddUser: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            openFormAddUser: false,\r\n            openFormUpdate: false,\r\n            err_firstname_update: '',\r\n            err_lastname_update: '',\r\n            err_email_update: '',\r\n            err_username: '',\r\n            err_firstname: '',\r\n            err_lastname: '',\r\n            err_password: '',\r\n            err_repassword: '',\r\n            err_email: '',\r\n            loading: ''\r\n        });\r\n    };\r\n\r\n    Register = (values) => {\r\n        this.setState({\r\n            loading: 'Vui lòng đợi...'\r\n        })\r\n        apiCall('users/register', 'POST', {\r\n            username: values.username,\r\n            password: values.password,\r\n            email: values.email,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n        }).then(res => {\r\n            this.setState({\r\n                loading: ''\r\n            })\r\n            var { customers } = this.state;\r\n            //console.log(customers)\r\n            customers.push(values)\r\n            this.setState({ isRegister: true });\r\n            if (this.state.isRegister) {\r\n                message.success('Thêm khách hàng thành công!', 1);\r\n                this.setState({ visible: false })\r\n            }\r\n        })\r\n    }\r\n   \r\n    componentDidMount() {\r\n        this.props.loadCustomer();\r\n    }\r\n    showFormEdit = (text) => {\r\n        //alert(text);\r\n        this.props.findCustomer(text)\r\n        this.setState({\r\n            openFormUpdate: true,\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.itemCustomer) {\r\n            var { itemCustomer } = nextProps;\r\n            this.setState({\r\n                id_update: itemCustomer.user_id,\r\n                username_update: itemCustomer.username,\r\n                firstname_update: itemCustomer.firstName,\r\n                lastname_update: itemCustomer.lastName,\r\n                email_update: itemCustomer.email\r\n            })\r\n        }\r\n        if(nextProps && nextProps.customers) {\r\n            var { customers } = nextProps;\r\n            this.setState({\r\n                customers: customers\r\n            })\r\n            this.props.loadCustomer();\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        //console.log(this.state);\r\n    }\r\n    closeForm =()=>{\r\n        this.setState({\r\n            openFormUpdate: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"col-sm-12 col-md-12 col-xs-12\" style={{ borderColor: '1px solid red', marginTop: '0px' }}>\r\n                    <Button onClick={this.showFormAddUser} type=\"primary\" style={{ margin: '0px 0px 5px 0px' }}><Icon type=\"plus\" />Thêm khách hàng</Button>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>First name</th>\r\n                                <th>Last name</th>\r\n                                <th>Email</th>\r\n                                <th>Username</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.customers.map((customer, index) => \r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{customer.firstName}</td>\r\n                                    <td>{customer.lastName}</td>\r\n                                    <td>{customer.email}</td>\r\n                                    <td>{customer.username}</td>\r\n                                    <td>\r\n                                        <Button onClick={() => { this.showFormEdit(customer.user_id) }}>\r\n                                            <Icon type=\"info-circle\" />\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n                <Drawer\r\n                    title=\"Thêm khách hàng\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.openFormAddUser}\r\n                    width={350}\r\n                >\r\n                    <FormAddCustomer Register={this.Register} loading={this.state.loading} />\r\n                </Drawer>\r\n                <Drawer\r\n                    title=\"Thông tin khách hàng\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.openFormUpdate}\r\n                    width={300}\r\n                >\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">ID:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" readOnly name=\"id_update\" value={this.state.id_update} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Username:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"username\"   readOnly name=\"username_update\" value={this.state.username_update} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Firstname:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" readOnly name=\"firstname_update\" value={this.state.firstname_update} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Lastname:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" readOnly name=\"lastname_update\" value={this.state.lastname_update} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Email:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" readOnly name=\"email_update\" value={this.state.email_update} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state.itemCustomer);\r\n    return {\r\n        customers: state.customer,\r\n        itemCustomer: state.itemCustomer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        findCustomer: (idCustomer) => {\r\n            dispatch(act_FindCustomer_Request(idCustomer))\r\n        },\r\n        loadCustomer: () => {\r\n            dispatch(act_LoadCustomer_Request())\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableData);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Icon, Drawer, Button, message } from 'antd';\r\nimport { act_LoadProduct_Request } from '../../../redux/product/action';\r\nclass ListProduct extends Component {\r\n    state = {\r\n        products: []\r\n    }\r\n    componentDidMount() {\r\n        this.props.load();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.products) {\r\n            var { products } = nextProps;\r\n            this.setState({\r\n                products: products\r\n            })\r\n            this.props.load();\r\n        }\r\n    }\r\n    showNameCategory = (id) => {\r\n        //alert(id)\r\n        var nameCategory = '';\r\n        if (id === 1) {\r\n            nameCategory = 'Hải sản'\r\n        } else if (id === 2) {\r\n            nameCategory = 'Thập cẩm'\r\n        }\r\n        else if (id === 3) {\r\n            nameCategory = 'Truyền thống'\r\n        }\r\n        return nameCategory;\r\n    }\r\n    formatNumber = (num) => {\r\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Tên sản phẩm</th>\r\n                            <th>Hình ảnh</th>\r\n                            <th>Giá</th>\r\n                            <th>Loại</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.products.map((product, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{product.name}</td>\r\n                                <td><img src={product.image} style={{ width: '50px', height: '20px' }}></img></td>\r\n                                <td>{this.formatNumber(product.description)} VNĐ</td>\r\n                                <td>{this.showNameCategory(product.pizzaCategory)}</td>\r\n                                <td>\r\n                                <span style={{marginLeft:'5px'}}>\r\n                                    <Button>\r\n                                        <Icon type=\"edit\" />\r\n                                    </Button>\r\n                                    </span>\r\n                                    <span style={{marginLeft:'5px'}}>\r\n                                    <Button>\r\n                                        <Icon type=\"delete\" />\r\n                                    </Button>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state.product);\r\n    return {\r\n        products: state.product,\r\n        //itemCustomer: state.itemCustomer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        load: () => {\r\n            dispatch(act_LoadProduct_Request())\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListProduct);    ","import * as Types from './actionTypes';\r\nimport apiCall from './../../utils/apiCall';\r\n\r\nexport const act_LoadCategory_Request = () =>{\r\n    return(dispatch) =>{\r\n        return apiCall('catalogies','GET',null).then(res =>{\r\n            //console.log(res.data);\r\n            dispatch(act_LoadCategory(res.data));\r\n        })\r\n    }\r\n}\r\nexport const act_LoadCategory = (data) =>{\r\n    return{\r\n        type: Types.LOAD_CATEGORY,\r\n        data\r\n    }\r\n}\r\nexport const act_LoadCategoryById_Request = (id) =>{\r\n    return(dispatch) =>{\r\n        return apiCall(`catalogy/get/${id}`,'GET',null).then(res =>{\r\n            //console.log(res.data);\r\n            dispatch(act_LoadCategoryById(res.data));\r\n        })\r\n    }\r\n}\r\nexport const act_LoadCategoryById = (data) =>{\r\n    return{\r\n        type: Types.FIND_CATEGORY,\r\n        data\r\n    }\r\n}\r\n\r\n// export const act_FindCustomer_Request = (idCustomer) =>{\r\n//     return(dispatch) =>{\r\n//         return apiCall(`users/get/${idCustomer}`,'GET',null).then(res =>{\r\n//             //console.log(res.data);\r\n//             dispatch(act_FindCustomer(res.data));\r\n//         })\r\n//     }\r\n// }\r\n// export const act_FindCustomer = (data) =>{\r\n//     return{\r\n//         type: Types.FIND_CUSTOMER,\r\n//         data\r\n//     }\r\n// }\r\n","export const LOAD_CATEGORY = 'LOAD_CATEGORY';\r\nexport const EDIT_CATEGORY= 'EDIT_CATEGORY';\r\nexport const UPDATE_CATEGORY= 'UPDATE_CATEGORY';\r\nexport const DELETE_CATEGORY= 'DELETE_CATEGORY';\r\nexport const FIND_CATEGORY= 'FIND_CATEGORY';\r\n","import React, { Component } from 'react';\r\nimport apiCall from '../../../utils/apiCall';\r\nimport { Form, Icon, Input, Button } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\n\r\nclass formAddCatelogy extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(values);\r\n                this.props.addCategory(values)\r\n            }\r\n        });\r\n    };\r\n   \r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const {loading} = this.props;\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Form.Item>\r\n                        {getFieldDecorator('name', {\r\n                            rules: [\r\n                                { required: true, message: 'Vui lòng nhập loại sản phẩm!' },\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Nhập tên loại sản phẩm\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Thêm\r\n                                    </Button>\r\n                    </Form.Item>\r\n                    <FormItem>\r\n                        <p style={{color:'red', fontWeight:'bold', marginLeft:'10px'}}>{loading}</p>\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst WrappedNormalRegisterForm = Form.create({ name: 'normal_login' })(formAddCatelogy);\r\nexport default WrappedNormalRegisterForm\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Icon, Drawer, Button, Modal, notification } from 'antd';\r\nimport { act_LoadCategory_Request, act_LoadCategoryById_Request } from '../../../redux/category/action';\r\nimport FormAddCategory from './formAddCatelogy';\r\nimport apiCall from '../../../utils/apiCall';\r\nclass ListCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categorys: [],\r\n            openFormAddCatelogy: false,\r\n            addCategory: false,\r\n            openFormUpdate: false,\r\n            id_update: '',\r\n            name_update: '',\r\n            visible: false,\r\n            id_delete:'',\r\n            loading: ''\r\n        }\r\n    }\r\n\r\n    showNameCategory = (id) => {\r\n        var nameCategory = '';\r\n        if (id === 1) {\r\n            nameCategory = 'Hải sản'\r\n        } else if (id === 2) {\r\n            nameCategory = 'Thập cẩm'\r\n        }\r\n        else if (id === 3) {\r\n            nameCategory = 'Truyền thống'\r\n        }\r\n        return nameCategory;\r\n    }\r\n    formatNumber = (num) => {\r\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n    }\r\n    showFormAddCatelogy = () => {\r\n        this.setState({\r\n            openFormAddCatelogy: true\r\n        })\r\n    }\r\n    onClose = () => {\r\n        this.setState({\r\n            openFormUpdate: false\r\n        })\r\n    }\r\n    addCategory = (values) => {\r\n        const token = localStorage.getItem(\"token\")\r\n        console.log(token)\r\n        this.setState({\r\n            loading: 'Vui lòng đợi...'\r\n        })\r\n        apiCall('catalogy/add', 'PUT', {\r\n            pizzaCategory: values.name,\r\n        }, { 'Authorization': \"Bearer \" + token }).then(res => {\r\n            //console.log(res)\r\n            this.setState({\r\n                loading: ''\r\n            })\r\n            var { categorys } = this.state;\r\n            //console.log(customers)\r\n            categorys.push(values)\r\n            if (res.data == \"Catalogy already\") {\r\n                notification.success({\r\n                    message: 'Loại sản phẩm đã tồn tại trong hệ thống'\r\n                });\r\n            } else {\r\n                notification.success({\r\n                    message: 'Thêm loại sản phẩm thành công'\r\n                });\r\n                this.setState({\r\n                    openFormAddCatelogy: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n    showFormEdit = (text) => {\r\n        //console.log(text)\r\n        this.props.findCatelogy(text);\r\n        this.setState({\r\n            openFormUpdate: true\r\n        })\r\n    }\r\n    showModal = () => {\r\n       \r\n      };\r\n   \r\n\r\n    handleCancel = e => {\r\n        // console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //console.log('b')\r\n        if (nextProps && nextProps.itemCatelogy) {\r\n            var { itemCatelogy } = nextProps;\r\n            this.setState({\r\n                id_update: itemCatelogy.id,\r\n                name_update: itemCatelogy.pizzaCategory,\r\n            })\r\n        }\r\n        if (nextProps && nextProps.categorys) {\r\n            var { categorys } = nextProps;\r\n            this.setState({\r\n                categorys: categorys\r\n            })\r\n            this.props.load();\r\n        }\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            openFormAddCatelogy: false\r\n        })\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    update = () => {\r\n        var { name_update, id_update } = this.state;\r\n        const token = localStorage.getItem(\"token\")\r\n        // console.log(token)\r\n\r\n        apiCall('catalogy/update', 'PUT', {\r\n            id: id_update,\r\n            pizzaCategory: name_update,\r\n        }, { 'Authorization': \"Bearer \" + token }).then(res => {\r\n            var { categorys } = this.state;\r\n            // getCategoryById = (id_update) =>{\r\n\r\n            // }\r\n            categorys.forEach((v, i) => {\r\n                if (v.id === id_update) {\r\n                    v.pizzaCategory = name_update\r\n                    this.setState({\r\n                        categorys: categorys\r\n                    })\r\n                }\r\n            });\r\n            if (res.data == \"Catalogy already\") {\r\n                notification.success({\r\n                    message: 'Loại sản phẩm đã tồn tại trong hệ thống'\r\n                });\r\n            } else {\r\n                notification.success({\r\n                    message: 'Sửa loại sản phẩm thành công'\r\n                });\r\n                this.setState({\r\n                    openFormUpdate: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n    showFormDelete = (text) => {\r\n        //alert(text)\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n        this.setState({\r\n            id_delete: text\r\n        })\r\n       \r\n    }\r\n    handleOk = e => {\r\n        //console.log(e);\r\n        const token = localStorage.getItem(\"token\")\r\n        // console.log(token)\r\n        apiCall(`catalogy/delete/${this.state.id_delete}`, 'PUT', {\r\n        }, { 'Authorization': \"Bearer \" + token }).then(res => {\r\n            var { categorys } = this.state;\r\n            categorys.splice(this.state.id_delete);\r\n            this.setState({\r\n                categorys: categorys\r\n            })\r\n            notification.success({\r\n                message: 'Xóa loại sản phẩm thành công'\r\n            });\r\n            this.setState({\r\n                openFormUpdate: false\r\n            })\r\n\r\n        })\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        //console.log('a')\r\n        this.props.load();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button onClick={this.showFormAddCatelogy} type=\"primary\" style={{ margin: '0px 0px 5px 0px' }}><Icon type=\"plus\" />Thêm loại sản phẩm</Button>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Mã loại</th>\r\n                            <th>Tên loại</th>\r\n                            <th>Thao tác</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.categorys.map((category, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{category.id}</td>\r\n                                <td>{category.pizzaCategory}</td>\r\n                                <td>\r\n                                    <span style={{marginLeft:'5px'}}>\r\n                                    <Button onClick={() => { this.showFormEdit(category.id) }}>\r\n                                        <Icon type=\"edit\" />\r\n                                    </Button>\r\n                                    </span>\r\n                                    <span style={{marginLeft:'5px'}}>\r\n                                    <Button onClick={() => { this.showFormDelete(category.id) }}>\r\n                                        <Icon type=\"delete\" />\r\n                                    </Button>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <Drawer\r\n                    title=\"Thêm loại sản phẩm\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.openFormAddCatelogy}\r\n                    width={350}\r\n                >\r\n                    <FormAddCategory addCategory={this.addCategory}  loading={this.state.loading} />\r\n                </Drawer>\r\n                <Drawer\r\n                    title=\"Sửa loại sản phẩm\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.openFormUpdate}\r\n                    width={300}\r\n                >\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">ID:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" name=\"id_update\" readOnly value={this.state.id_update} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\">Tên loại sản phẩm:</label>\r\n                            <div>\r\n                                <input type=\"text\" className=\"form-control\" name=\"name_update\" value={this.state.name_update} onChange={this.onChange} placeholder=\"Enter email\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"control-label\" htmlFor=\"email\"></label>\r\n                            <Button onClick={this.update}>Update</Button>\r\n                        </div>\r\n                    </form>\r\n                </Drawer>\r\n                <Modal\r\n                    title=\"Xóa loại sản phẩm\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <span style={{color: 'green', textAlign: 'center'}}>Bạn có chắc chắn xóa loại sản phẩm này?</span>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state.category);\r\n    return {\r\n        categorys: state.category,\r\n        itemCatelogy: state.itemCatelogy\r\n        //itemCustomer: state.itemCustomer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        load: () => {\r\n            dispatch(act_LoadCategory_Request())\r\n        },\r\n        findCatelogy: (id) => {\r\n            dispatch(act_LoadCategoryById_Request(id))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCategory);    ","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\r\nimport TableData from './TableData/TableData';\r\nimport ListProduct from './TableData/ListProduct'\r\nimport ListCategory from './TableData/ListCategory'\r\nimport './style.css';\r\nconst { Header, Sider, Content } = Layout;\r\nclass Admin extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        showCustomer: true,\r\n        showProduct: false,\r\n        showCategory: false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n    handleClick = (e) => {\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n        if (e.key === 'product') {\r\n            this.setState({\r\n                showCustomer: false,\r\n                showProduct: true,\r\n                showCategory: false\r\n            })\r\n        }\r\n        if (e.key === 'user') {\r\n            this.setState({\r\n                showCustomer: true,\r\n                showProduct: false,\r\n                showCategory: false\r\n            })\r\n        }\r\n        if (e.key === 'category') {\r\n            this.setState({\r\n                showCustomer: false,\r\n                showProduct: false,\r\n                showCategory: true\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n                    <div className=\"logo\" />\r\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} onClick={this.handleClick}>\r\n                        <Menu.Item key=\"user\">\r\n                            <Icon type=\"user\" />\r\n                            <span>Quản lý khách hàng</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"category\">\r\n                            <Icon type=\"upload\" />\r\n                            <span>Quản lý loại sản phẩm</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"product\">\r\n                            <Icon type=\"video-camera\" />\r\n                            <span>Quản lý sản phẩm</span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header style={{ background: '#fff', padding: 0 }}>\r\n                        <div>\r\n                            <Icon\r\n                                className=\"trigger\"\r\n                                type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                                onClick={this.toggle}\r\n                            />\r\n                            {\r\n                                (this.state.showCustomer) ?\r\n                                    <Breadcrumb style={{ margin: '0px 0px 0px 15px' }}>\r\n                                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                                        <Breadcrumb.Item>Quản lý khách hàng</Breadcrumb.Item>\r\n                                    </Breadcrumb> : <div></div>\r\n                            }\r\n                            {\r\n                                (this.state.showCategory) ?\r\n                                    <Breadcrumb style={{ margin: '0px 0px 0px 15px' }}>\r\n                                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                                        <Breadcrumb.Item>Quản lý loại sản phẩm</Breadcrumb.Item>\r\n                                    </Breadcrumb> : <div></div>\r\n                            }\r\n                            {\r\n                                (this.state.showProduct) ?\r\n                                    <Breadcrumb style={{ margin: '0px 0px 0px 15px' }}>\r\n                                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                                        <Breadcrumb.Item>Quản lý sản phẩm</Breadcrumb.Item>\r\n                                    </Breadcrumb> : <div></div>\r\n                            }\r\n                        </div>\r\n                    </Header>\r\n                    <Content\r\n                        style={{\r\n                            margin: '24px 16px',\r\n                            padding: 24,\r\n                            background: '#fff',\r\n                            minHeight: 280,\r\n                        }}\r\n                    >   {\r\n                            (this.state.showCustomer) ?\r\n                                <TableData /> : <div></div>\r\n                        }\r\n                        {\r\n                            (this.state.showCategory) ?\r\n                                <ListCategory /> : <div></div>\r\n                        }\r\n                        {\r\n                            (this.state.showProduct) ?\r\n                                <ListProduct /> : <div></div>\r\n                        }\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default Admin;","import React, { Component } from 'react';\r\n\r\nclass NotFoundPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                \r\n                <div className=\"alert alert-warning\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>\r\n                    <strong>Sorry, this page does not exist</strong>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NotFoundPage;","import React, { Component } from 'react'\r\nimport { notification, Select, Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport apiCall from '../../utils/apiCall';\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst names = localStorage.getItem(\"name\");\r\nconst id = localStorage.getItem(\"id\");\r\nconst sum = localStorage.getItem(\"SUM\");\r\nclass FormCart extends Component {\r\n    state = {\r\n        name: names,\r\n        address: '',\r\n        method: \"1\",\r\n        id: id,\r\n        sum: sum\r\n    }\r\n    \r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    handleChange =(value) =>{\r\n        this.setState({\r\n            method: value\r\n        })\r\n    }\r\n    datHang = () =>{\r\n       \r\n        const {data} = this.props;\r\n        console.log(data)\r\n        const arr = [];\r\n        var sl=0;\r\n        data.forEach((v, i) =>{\r\n            sl += v.quanlity\r\n            arr.push(v.item.id)\r\n        })\r\n        var listId = arr.join(',')\r\n        console.log(sl)\r\n        console.log(listId)\r\n        var{id,name, address, method} = this.state;\r\n        console.log(this.state)\r\n        apiCall('order/add', 'POST', {\r\n            id: id,\r\n            name: name,\r\n            address: address,\r\n            method: method,\r\n            productid: listId,\r\n            sum: sum,\r\n            quanlity: sl\r\n        }).then(res2 => {\r\n            notification.success({\r\n                message: 'Bạn đã đặt hàng thành công'\r\n            });\r\n            localStorage.removeItem(\"CART\")\r\n            window.location.reload();\r\n        })\r\n    }\r\n   \r\n    render() {\r\n        const names = localStorage.getItem(\"name\");\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <Form.Item>\r\n                    <div className=\"title-login\">\r\n                        Đặt hàng\r\n                                </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"Tên khách hàng\">\r\n                    <Input defaultValue={names} name=\"name\" value={names} readOnly onChange={this.onChange}/>\r\n                </Form.Item>\r\n                <FormItem label=\"Địa chỉ\">\r\n                    <TextArea rows={4} placeholder=\"Vui lòng nhập địa chỉ nhận hàng\" name=\"address\" value={this.state.address} onChange={this.onChange}/>\r\n                </FormItem>\r\n                <Form.Item label=\"Phương thức thanh toán\">\r\n                    <Select defaultValue=\"1\" onChange={this.handleChange}>\r\n                        <Option value=\"1\">Thanh toán khi nhận hàng</Option>\r\n                        <Option value=\"2\">Chuyển khoản</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={this.datHang} className=\"login-form-button\">\r\n                        Xác nhận đặt hàng\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(FormCart);\r\nexport default WrappedNormalLoginForm","import React, { Component } from 'react';\r\nimport { Icon, InputNumber, Button } from 'antd';\r\nimport FormCart from './FormCart'\r\nvar data = JSON.parse(localStorage.getItem('CART'));\r\nconsole.log(data)\r\nclass Cart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            sum: 0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        let update = this.props.data\r\n        let dataAfterUpdate = []\r\n        var total = 0;\r\n        update.map((val) => {\r\n            let objetTmp = { ...val, money: parseInt(val.item.description) }\r\n            objetTmp.item.money = parseInt(val.item.description)*objetTmp.quanlity\r\n            total += objetTmp.item.money;\r\n            dataAfterUpdate.push(objetTmp)\r\n        })\r\n        this.setState({ data: dataAfterUpdate, sum: total })\r\n        localStorage.setItem(\"SUM\", JSON.stringify(total));\r\n    }\r\n\r\n    onChange = (value, id) => {\r\n        let update = this.state.data\r\n        // console.log(\"data none update\", this.state.data)\r\n        let dataAfterUpdate = []\r\n        var total = 0;\r\n        update.map((val) => {\r\n            let objetTmp = { ...val, money: parseInt(val.item.description + \"\") }\r\n            if (objetTmp.item.id === id) {\r\n                objetTmp.quanlity=value;\r\n                objetTmp.item.money = parseInt(value) * parseInt(val.item.description)\r\n            }\r\n            total += objetTmp.item.money;\r\n            dataAfterUpdate.push(objetTmp)\r\n            localStorage.setItem('CART', JSON.stringify(dataAfterUpdate));\r\n            \r\n            //localStorage.setItem('CART', JSON.stringify(dataAfterUpdate));\r\n        })\r\n        this.setState({ data: dataAfterUpdate, sum: total })\r\n        localStorage.setItem(\"SUM\", JSON.stringify(total));\r\n\r\n        //console.log(\"date update\", dataAfterUpdate)\r\n    }\r\n    showMessDelete = (ind) => {\r\n        //alert(ind)\r\n        let update = this.state.data\r\n        var {data} = this.state;\r\n         data.splice(ind,1);\r\n        //console.log(data)\r\n        let dataAfterUpdate = []\r\n        var total = 0;\r\n        update.map((val) => {\r\n            let objetTmp = { ...val, money: parseInt(val.item.description + \"\") }\r\n            total += objetTmp.item.money;\r\n            dataAfterUpdate.push(objetTmp)\r\n            localStorage.setItem('CART', JSON.stringify(dataAfterUpdate));\r\n            //localStorage.setItem('CART', JSON.stringify(dataAfterUpdate));\r\n        })\r\n        this.setState({\r\n            data: data, \r\n            sum: total\r\n        })\r\n        localStorage.setItem(\"SUM\", JSON.stringify(total));\r\n    }\r\n    formatNumber = (num) => {\r\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n    }\r\n    render() {\r\n        var { data } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-8\" style={{ backgroundColor: '#e5e5e5' }}>\r\n                        <table class=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Tên sản phẩm</th>\r\n                                    <th scope=\"col\">Số lượng</th>\r\n                                    <th scope=\"col\">Hình ảnh</th>\r\n                                    <th scope=\"col\">Đơn giá</th>\r\n                                    <th scope=\"col\">Thành tiền</th>\r\n                                    <th scope=\"col\">Xóa</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {\r\n                                    (data != null) && data.map((item, ind) =>\r\n                                        <tr>\r\n                                            {/* //<th>{item.item.description} * {item.item.quanlity}</th> */}\r\n                                            <th scope=\"row\">{item.item.name}</th>\r\n                                            <th scope=\"row\"><InputNumber min={1} max={10} defaultValue={item.quanlity} onChange={(val) => this.onChange(val, item.item.id)} /></th>\r\n                                            <th scope=\"row\"><img src={item.item.image} style={{ width: '50px', height: '50px' }}></img></th>\r\n                                            <th scope=\"row\">{this.formatNumber(item.item.description)} VND</th>\r\n                                            <th scope=\"row\">{this.formatNumber(item.item.money)} VND</th>\r\n                                            <th>\r\n                                                <Button onClick={(event) => { event.stopPropagation(); this.showMessDelete(ind) }}>\r\n                                                    <Icon type=\"delete\" title=\"Update customer\" />\r\n                                                </Button>\r\n                                            </th>\r\n                                        </tr>\r\n                                        //<p>{item.item.description} * {item.item.quanlity}</p>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        <div>\r\n                            <p style={{float:'right', fontWeight:'bold'}}>Tổng: {this.formatNumber(this.state.sum)} VND</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <FormCart data={data}/>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Cart;","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from \"./components/Menu/Nav\";\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport Admin from './pages/Admin/Admin';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\nimport Cart from './components/Cart/Cart';\nvar data = JSON.parse(localStorage.getItem('CART'));\nvar initialState = data ? data : []\nconsole.log(initialState)\nclass App extends Component {\n\n  addProductToCard = (item, quanlity) => {\n\n    initialState.push({ item, quanlity })\n\n    localStorage.setItem('CART', JSON.stringify(initialState));\n  }\n\n  render() {\n    const ROLE = localStorage.getItem(\"roleAdmin\")\n    //console.log(ROLE);\n    // const {cart} = this.state\n    return (\n      <Router>\n        <div>\n          <Nav data={initialState} />\n          {(ROLE) ?\n            <Switch>\n              <Route\n                path='/'\n                exact\n                render={(props) => <HomePage data={initialState} addProductToCard={this.addProductToCard} {...props} />}\n              />\n              <Route\n                path='/cart'\n                render={(props) => <Cart {...props} data={initialState} />}\n              />\n              {/* <Route path=\"/\" exact component={HomePage} /> */}\n              {/* <Route path=\"/cart\" component={Cart}/> */}\n              <Route path=\"/admin\" component={Admin} />\n              <Route path=\"*\" component={NotFoundPage} />\n            </Switch> :\n            <Switch>\n              <Route\n                path='/'\n                exact\n                render={(props) => <HomePage data={initialState} addProductToCard={this.addProductToCard} {...props} />}\n              />\n              <Route\n                path='/cart'\n                render={(props) => <Cart {...props} data={initialState} />}\n              />\n              {/* <Route path=\"/\" exact component={HomePage} /> */}\n              {/* <Route path=\"/cart\" component={Cart}/> */}\n              <Route path=\"*\" component={NotFoundPage} />\n            </Switch>\n          }\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from './actionTypes';\r\nvar list_Product = [];\r\nconst PRODUCT = (state = list_Product, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_PRODUCT_BYID:\r\n            return action.data;  \r\n        case Types.LOAD_PRODUCT:\r\n            return action.data;\r\n        case Types.DELETE_PRODUCT:\r\n            return action.data;\r\n        case Types.UPDATE_PRODUCT:\r\n            return action.data;\r\n        case Types.UPDATE_PRODUCT:\r\n            return action.data; \r\n        case Types.LOAD_PAGE:\r\n            return action.data;  \r\n        default: return state;\r\n\r\n    }\r\n}\r\nexport default PRODUCT;","import * as Types from './actionType';\r\nvar list_CUSTOMER = [];\r\nconst CUSTOMER = (state = list_CUSTOMER, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_CUSTOMER:\r\n            return action.data;\r\n        case Types.DELETE_CUSTOMER:\r\n            return action.data;\r\n        case Types.UPDATE_CUSTOMER:\r\n            return action.data;            \r\n        default: return state;\r\n    }\r\n}\r\nexport default CUSTOMER;","import * as Types from './actionType';\r\nvar CUSTOMER = {};\r\nconst item = (state = CUSTOMER, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_CUSTOMER:\r\n        return action.data;             \r\n        default: return state;\r\n    }\r\n}\r\nexport default item;","import * as Types from './actionTypes';\r\n//var data =  JSON.parse(localStorage.getItem('CART'));\r\nvar initialState = [];\r\n\r\nconst CART = (state = initialState, action) => {\r\n    var {product, quanlity} = action;\r\n    switch (action.type) {\r\n        case Types.ADD_TO_CART:\r\n        state.push({\r\n            product,\r\n            quanlity\r\n        })\r\n        //console.log(state)\r\n        return [...state];  \r\n       \r\n        default: return [...state];\r\n\r\n    }\r\n}\r\nexport default CART;","import * as Types from './actionTypes';\r\nvar list_CATEGORY = [];\r\nconst CATEGORY = (state = list_CATEGORY, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_CATEGORY:\r\n            return action.data;\r\n        case Types.DELETE_CATEGORY:\r\n            return action.data;\r\n        case Types.UPDATE_CATEGORY:\r\n            return action.data;\r\n        case Types.UPDATE_CATEGORY:\r\n            return action.data;            \r\n        default: return state;\r\n    }\r\n}\r\nexport default CATEGORY;","import * as Types from './actionTypes';\r\nvar CATELOGY = {};\r\nconst item = (state = CATELOGY, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_CATEGORY:\r\n        return action.data;             \r\n        default: return state;\r\n    }\r\n}\r\nexport default item;","import { combineReducers } from 'redux';\r\nimport product from './product/product';\r\nimport customer from './customer/customer';\r\nimport itemCustomer from './customer/itemCustomer';\r\nimport cart from './cart/cart';\r\nimport category from './category/category'\r\nimport itemCatelogy from './category/itemCatelogy'\r\nconst appReducers = combineReducers({\r\n    product,\r\n    customer,\r\n    itemCustomer,\r\n    cart,\r\n    category,\r\n    itemCatelogy\r\n});\r\nexport default appReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport myReducer from './redux/index';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {applyMiddleware} from 'redux';\r\nimport \"antd/dist/antd.css\";\r\nconst store = createStore(\r\n    myReducer,\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n    applyMiddleware(thunk)\r\n    );\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n,  \r\n document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}